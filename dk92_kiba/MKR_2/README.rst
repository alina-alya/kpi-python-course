#. Написать код, реализующий колоду карт в ООП-стиле.
   
  
Ваірант 1 :
 Есть класс ``Card``, унаследованный от ``typing.NamedTuple``.
   У каждой карты есть масть (``suit``) и значение (``rank``).
   Масть – объект из ``Enum``, для значения выбрать (или создать) подходящий тип.
   
   Создать класс ``CardDeck``, являющийся стандартной колодой из 36 карт.
   Класс имеет методы:
     - ``shuffle`` – случайно перемешивает колоду карт
     - ``handout`` – раздает по N карт M игрокам
     - Специальные (dunder-) методы для сравнения двух карт между собой.
       Сравнивать можно только карты одной масти. В противном случае,
       необходимо возвращать ошибку (создать свой класс для ошибки).
     - Специальные (dunder-) методы для красивого вывода масти и значения карты
       в виде двух Юникод-символов (посмотреть таблицу с специальными символами карт).
       Помимо этого, в коде специальные символы не использовать
   
   Унаследовать класс ``FrenchDeck`` от ``CardDeck``. Данный класс отличается от
   родительского тем, что содержит 52 карты.
   Продумать, как оптимально расширить набор карт с 36 до 52.
   
   В блоке ``if name == 'main':`` коротко продемонстрировать использование
   
   Все должно задокументировано согласно PEP257.
   Код должен соответствовать стилю PEP8. Wemake-Python-Styleguide, при запуске flake8
   не должен выводить *ни одной* ошибки.


Результат роботи:
Код був створений та задокументоаний 
Не було створено додаткового классу який би приймав помилку 
Карти можуть порівнюватися,і лише однієї масті 
Був реалізован метод виводу карти на єкран 


 